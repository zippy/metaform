

Pending:
  SimpleForm -- dsl:  workflow (define a workflow) should allow
    # Not yet implemented
    # ./spec/metaform/form_spec.rb:1431
  Record -- timestamped updating should prevent overwriting of the same field when using timestamped updating but allow setting of fields that haven't been set and updating of older fields
    # Not yet implemented
    # ./spec/metaform/record_spec.rb:976

Failures:

  1) SimpleForm -- dsl:  f (define a field) should record the definition order
     Failure/Error: @form.definition_order.should == ["name", "age", "height", "degree", "no_ed_reason", "higher_ed_years", "senior", "other_eye_color", "eye_color", "age_plus_education", "hash_field", "house_value", "married", "children", "oldest_child_age", "years_married", "dietary_restrictions", "dr_type", "dr_other", "test", "dog_type", "owner", "mansion_info", "luxury_info"]
       expected: ["name", "age", "height", "degree", "no_ed_reason", "higher_ed_years", "senior", "other_eye_color", "eye_color", "age_plus_education", "hash_field", "house_value", "married", "children", "oldest_child_age", "years_married", "dietary_restrictions", "dr_type", "dr_other", "test", "dog_type", "owner", "mansion_info", "luxury_info"]
            got: ["name", "age", "height", "degree", "no_ed_reason", "higher_ed_years", "senior", "other_eye_color", "eye_color", "age_plus_education", "hash_field", "bathroom_number", "house_value", "favorite_date", "married", "children", "oldest_child_age", "years_married", "dietary_restrictions", "dr_type", "dr_other", "test", "dog_type", "owner", "mansion_info", "luxury_info"] (using ==)
     # ./spec/metaform/form_spec.rb:548:in `block (4 levels) in <top (required)>'

  2) SimpleForm -- dsl:  listing with locate should return the number of items that match a combination of ruby filters
     Failure/Error: @records.size.should == 1
       expected: 1
            got: 0 (using ==)
     # ./spec/metaform/form_spec.rb:82:in `block (4 levels) in <top (required)>'

  3) SimpleForm -- dsl:  listing with locate should return the number of items that match a ruby filter
     Failure/Error: @records.size.should == 2
       expected: 2
            got: 1 (using ==)
     # ./spec/metaform/form_spec.rb:69:in `block (4 levels) in <top (required)>'

  4) SimpleForm -- dsl:  listing with locate should return 4 items when all is chosen
     Failure/Error: @records.size.should == 4
       expected: 4
            got: 2 (using ==)
     # ./spec/metaform/form_spec.rb:51:in `block (4 levels) in <top (required)>'

  5) SimpleForm -- dsl:  q (display a question) should render with value for previous highest index answer, if set as flow-through
     Failure/Error: @form.q 'house_value', :flow_through => true
     RuntimeError:
       The question house_value is set as flow_through, but was not given a proc
     # ./lib/metaform/form.rb:663:in `q'
     # ./spec/metaform/form_spec.rb:800:in `block (5 levels) in <top (required)>'
     # ./lib/metaform/form.rb:1522:in `with_record'
     # ./spec/metaform/form_spec.rb:795:in `block (4 levels) in <top (required)>'

  6) SimpleForm -- dsl:  q (display a question) should use the current index to determine the value for the follow up if the flow_through proc returns nil
     Failure/Error: (@form.get_body[0] =~ /4XXX/).should_not == nil
       expected not: == nil
                got:    nil
     # ./spec/metaform/form_spec.rb:851:in `block (4 levels) in <top (required)>'

  7) SimpleForm dump form key should be able to export a the form definiton
     Failure/Error: @form.defintion_dump.should == "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- ffffff: black;   00ff00: green;   0000ff: blue;   x: other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nhouse_value,,integer,,false\nmarried,,string,,nil,ENUM-- y: Yes;   n: No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- y: Yes;   n: No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- <nil>: -;   choice: By choice;   medical: for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none"
       expected: "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- ffffff: black;   00ff00: green;   0000ff: blue;   x: other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nhouse_value,,integer,,false\nmarried,,string,,nil,ENUM-- y: Yes;   n: No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- y: Yes;   n: No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- <nil>: -;   choice: By choice;   medical: for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none"
            got: "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- ffffff: black;   00ff00: green;   0000ff: blue;   x: other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nbathroom_number,,string,,\"\"\"house_value>10000\"\"\",none\nhouse_value,,integer,,false\nfavorite_date,,date,,false\nmarried,,string,,nil,ENUM-- y: Yes;   n: No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- y: Yes;   n: No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- <nil>: -;   choice: By choice;   medical: for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none" (using ==)
       Diff:
       
       @@ -10,7 +10,9 @@
        eye_color,,string,,nil,ENUM-- ffffff: black;   00ff00: green;   0000ff: blue;   x: other
        age_plus_education,,string,,false
        hash_field,,hash,,false
       +bathroom_number,,string,,"""house_value>10000""",none
        house_value,,integer,,false
       +favorite_date,,date,,false
        married,,string,,nil,ENUM-- y: Yes;   n: No
        children,,integer,,false
        oldest_child_age,,integer,,false
     # ./spec/metaform/form_spec.rb:1727:in `block (3 levels) in <top (required)>'

  8) SimpleForm dump form key should be able to export a the form definiton with spss codes
     Failure/Error: @form.defintion_dump(true).should == "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- 1 (ffffff): black;   2 (00ff00): green;   3 (0000ff): blue;   4 (x): other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nhouse_value,,integer,,false\nmarried,,string,,nil,ENUM-- 1 (y): Yes;   2 (n): No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- 1 (y): Yes;   2 (n): No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- (empty) (<nil>): -;   1 (choice): By choice;   2 (medical): for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none"
       expected: "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- 1 (ffffff): black;   2 (00ff00): green;   3 (0000ff): blue;   4 (x): other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nhouse_value,,integer,,false\nmarried,,string,,nil,ENUM-- 1 (y): Yes;   2 (n): No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- 1 (y): Yes;   2 (n): No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- (empty) (<nil>): -;   1 (choice): By choice;   2 (medical): for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none"
            got: "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- 1 (ffffff): black;   2 (00ff00): green;   3 (0000ff): blue;   4 (x): other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nbathroom_number,,string,,\"\"\"house_value>10000\"\"\",none\nhouse_value,,integer,,false\nfavorite_date,,date,,false\nmarried,,string,,nil,ENUM-- 1 (y): Yes;   2 (n): No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- 1 (y): Yes;   2 (n): No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- (empty) (<nil>): -;   1 (choice): By choice;   2 (medical): for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none" (using ==)
       Diff:
       
       @@ -10,7 +10,9 @@
        eye_color,,string,,nil,ENUM-- 1 (ffffff): black;   2 (00ff00): green;   3 (0000ff): blue;   4 (x): other
        age_plus_education,,string,,false
        hash_field,,hash,,false
       +bathroom_number,,string,,"""house_value>10000""",none
        house_value,,integer,,false
       +favorite_date,,date,,false
        married,,string,,nil,ENUM-- 1 (y): Yes;   2 (n): No
        children,,integer,,false
        oldest_child_age,,integer,,false
     # ./spec/metaform/form_spec.rb:1730:in `block (3 levels) in <top (required)>'

  9) SimpleForm dump form key should be able to export a the form definiton
     Failure/Error: @form.defintion_dump.should == "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- 1 (ffffff): black;   2 (00ff00): green;   3 (0000ff): blue;   4 (x): other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nbathroom_number,,string,,\"\"\"house_value>10000\"\"\",none\nhouse_value,,integer,,false\nfavorite_date,,date,,false\nmarried,,string,,nil,ENUM-- 1 (y): Yes;   2 (n): No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- 1 (y): Yes;   2 (n): No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- (empty) (<nil>): -;   1 (choice): By choice;   2 (medical): for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none"
       expected: "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- 1 (ffffff): black;   2 (00ff00): green;   3 (0000ff): blue;   4 (x): other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nbathroom_number,,string,,\"\"\"house_value>10000\"\"\",none\nhouse_value,,integer,,false\nfavorite_date,,date,,false\nmarried,,string,,nil,ENUM-- 1 (y): Yes;   2 (n): No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- 1 (y): Yes;   2 (n): No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- (empty) (<nil>): -;   1 (choice): By choice;   2 (medical): for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none"
            got: "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- ffffff: black;   00ff00: green;   0000ff: blue;   x: other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nbathroom_number,,string,,\"\"\"house_value>10000\"\"\",none\nhouse_value,,integer,,false\nfavorite_date,,date,,false\nmarried,,string,,nil,ENUM-- y: Yes;   n: No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- y: Yes;   n: No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- <nil>: -;   choice: By choice;   medical: for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none" (using ==)
       Diff:
       
       
       @@ -7,18 +7,18 @@
        higher_ed_years,,string,years of higher education,true,none
        senior,,string,,true,none
        other_eye_color,,string,,"""eye_color=x""",none
       -eye_color,,string,,nil,ENUM-- 1 (ffffff): black;   2 (00ff00): green;   3 (0000ff): blue;   4 (x): other
       +eye_color,,string,,nil,ENUM-- ffffff: black;   00ff00: green;   0000ff: blue;   x: other
        age_plus_education,,string,,false
        hash_field,,hash,,false
        bathroom_number,,string,,"""house_value>10000""",none
        house_value,,integer,,false
        favorite_date,,date,,false
       -married,,string,,nil,ENUM-- 1 (y): Yes;   2 (n): No
       +married,,string,,nil,ENUM-- y: Yes;   n: No
        children,,integer,,false
        oldest_child_age,,integer,,false
        years_married,,integer,,"""married=y""",none
       -dietary_restrictions,,string,Dietary restrictions,nil,ENUM-- 1 (y): Yes;   2 (n): No
       -dr_type,,string,type,"""dietary_restrictions=y""",ENUM-- (empty) (<nil>): -;   1 (choice): By choice;   2 (medical): for medical reasons
       +dietary_restrictions,,string,Dietary restrictions,nil,ENUM-- y: Yes;   n: No
       +dr_type,,string,type,"""dietary_restrictions=y""",ENUM-- <nil>: -;   choice: By choice;   medical: for medical reasons
        dr_other,,string,more info,"""dietary_restrictions=y""",none
        test,,string,,false
        dog_type,,string,,false
     # ./spec/metaform/form_spec.rb:1736:in `block (3 levels) in <top (required)>'

  10) SimpleForm dump form key should be able to export a the form definiton with spss codes
     Failure/Error: @form.defintion_dump(true).should == "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- ffffff: black;   00ff00: green;   0000ff: blue;   x: other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nbathroom_number,,string,,\"\"\"house_value>10000\"\"\",none\nhouse_value,,integer,,false\nfavorite_date,,date,,false\nmarried,,string,,nil,ENUM-- y: Yes;   n: No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- y: Yes;   n: No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- <nil>: -;   choice: By choice;   medical: for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none"
       expected: "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- ffffff: black;   00ff00: green;   0000ff: blue;   x: other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nbathroom_number,,string,,\"\"\"house_value>10000\"\"\",none\nhouse_value,,integer,,false\nfavorite_date,,date,,false\nmarried,,string,,nil,ENUM-- y: Yes;   n: No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- y: Yes;   n: No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- <nil>: -;   choice: By choice;   medical: for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none"
            got: "field_name,file,type,label,required,constraints\nname,,string,,true,none\nage,,string,,true,none\nheight,,string,,true,none\ndegree,,string,,\"\"\"higher_ed_years=~/../\"\"\",none\nno_ed_reason,,string,,\"\"\"higher_ed_years=!0\"\"\",none\nhigher_ed_years,,string,years of higher education,true,none\nsenior,,string,,true,none\nother_eye_color,,string,,\"\"\"eye_color=x\"\"\",none\neye_color,,string,,nil,ENUM-- 1 (ffffff): black;   2 (00ff00): green;   3 (0000ff): blue;   4 (x): other\nage_plus_education,,string,,false\nhash_field,,hash,,false\nbathroom_number,,string,,\"\"\"house_value>10000\"\"\",none\nhouse_value,,integer,,false\nfavorite_date,,date,,false\nmarried,,string,,nil,ENUM-- 1 (y): Yes;   2 (n): No\nchildren,,integer,,false\noldest_child_age,,integer,,false\nyears_married,,integer,,\"\"\"married=y\"\"\",none\ndietary_restrictions,,string,Dietary restrictions,nil,ENUM-- 1 (y): Yes;   2 (n): No\ndr_type,,string,type,\"\"\"dietary_restrictions=y\"\"\",ENUM-- (empty) (<nil>): -;   1 (choice): By choice;   2 (medical): for medical reasons\ndr_other,,string,more info,\"\"\"dietary_restrictions=y\"\"\",none\ntest,,string,,false\ndog_type,,string,,false\nowner,,string,,false\nmansion_info,,string,Extra info about each mansions,\"\"\"is_mansion\"\"\",none\nluxury_info,,string,Extra info about all mansions,\"\"\"has_mansion\"\"\",none" (using ==)
       Diff:
       
       
       @@ -7,18 +7,18 @@
        higher_ed_years,,string,years of higher education,true,none
        senior,,string,,true,none
        other_eye_color,,string,,"""eye_color=x""",none
       -eye_color,,string,,nil,ENUM-- ffffff: black;   00ff00: green;   0000ff: blue;   x: other
       +eye_color,,string,,nil,ENUM-- 1 (ffffff): black;   2 (00ff00): green;   3 (0000ff): blue;   4 (x): other
        age_plus_education,,string,,false
        hash_field,,hash,,false
        bathroom_number,,string,,"""house_value>10000""",none
        house_value,,integer,,false
        favorite_date,,date,,false
       -married,,string,,nil,ENUM-- y: Yes;   n: No
       +married,,string,,nil,ENUM-- 1 (y): Yes;   2 (n): No
        children,,integer,,false
        oldest_child_age,,integer,,false
        years_married,,integer,,"""married=y""",none
       -dietary_restrictions,,string,Dietary restrictions,nil,ENUM-- y: Yes;   n: No
       -dr_type,,string,type,"""dietary_restrictions=y""",ENUM-- <nil>: -;   choice: By choice;   medical: for medical reasons
       +dietary_restrictions,,string,Dietary restrictions,nil,ENUM-- 1 (y): Yes;   2 (n): No
       +dr_type,,string,type,"""dietary_restrictions=y""",ENUM-- (empty) (<nil>): -;   1 (choice): By choice;   2 (medical): for medical reasons
        dr_other,,string,more info,"""dietary_restrictions=y""",none
        test,,string,,false
        dog_type,,string,,false
     # ./spec/metaform/form_spec.rb:1739:in `block (3 levels) in <top (required)>'

Finished in 29.09 seconds
653 examples, 10 failures, 2 pending

Failed examples:

rspec ./spec/metaform/form_spec.rb:547 # SimpleForm -- dsl:  f (define a field) should record the definition order
rspec ./spec/metaform/form_spec.rb:75 # SimpleForm -- dsl:  listing with locate should return the number of items that match a combination of ruby filters
rspec ./spec/metaform/form_spec.rb:65 # SimpleForm -- dsl:  listing with locate should return the number of items that match a ruby filter
rspec ./spec/metaform/form_spec.rb:47 # SimpleForm -- dsl:  listing with locate should return 4 items when all is chosen
rspec ./spec/metaform/form_spec.rb:794 # SimpleForm -- dsl:  q (display a question) should render with value for previous highest index answer, if set as flow-through
rspec ./spec/metaform/form_spec.rb:838 # SimpleForm -- dsl:  q (display a question) should use the current index to determine the value for the follow up if the flow_through proc returns nil
rspec ./spec/metaform/form_spec.rb:1726 # SimpleForm dump form key should be able to export a the form definiton
rspec ./spec/metaform/form_spec.rb:1729 # SimpleForm dump form key should be able to export a the form definiton with spss codes
rspec ./spec/metaform/form_spec.rb:1735 # SimpleForm dump form key should be able to export a the form definiton
rspec ./spec/metaform/form_spec.rb:1738 # SimpleForm dump form key should be able to export a the form definiton with spss codes

Randomized with seed 32406

